<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.techweblearn.musicbeat">

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/icon"
        android:label="@string/app_name"
        android:roundIcon="@drawable/icon"
        android:supportsRtl="true"
        android:theme="@style/White_Wood">
        <activity android:name=".HomeActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="android.intent.action.MUSIC_PLAYER" />

                <category android:name="android.intent.category.APP_MUSIC" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".IntroActivity"
            android:label="Intro" />
        <activity
            android:name=".SettingActivity"
            android:label="@string/action_settings"
            android:theme="@style/SettingsTheme" />

        <service
            android:name=".Service.MusicPlayBackService"
            android:enabled="true"
            android:exported="true"
            android:stopWithTask="false">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>
        <service android:name=".network.services.ArtistInfoServices" />
        <service android:name=".network.services.LyricsFetcherService" />

        <!--
             MediaSession, prior to API 21, uses a broadcast receiver to communicate with a
             media session. It does not have to be this broadcast receiver, but it must
             handle the action "android.intent.action.MEDIA_BUTTON".

             Additionally, this is used to resume the service from an inactive state upon
             receiving a media button event (such as "play").
        -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <!-- Use For Alarm Manager -->

        <receiver android:name=".Service.MusicPlayBackService$SleepTimer" />

        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />

        <activity android:name=".FeedBackActivity"></activity>
    </application>

</manifest>